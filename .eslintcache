[{"/home/dci/Documents/Plant_Store/src/index.js":"1","/home/dci/Documents/Plant_Store/src/App.js":"2","/home/dci/Documents/Plant_Store/src/components/redux/store.js":"3","/home/dci/Documents/Plant_Store/src/components/redux/reducer.js":"4","/home/dci/Documents/Plant_Store/src/components/NavbarDisplay.jsx":"5","/home/dci/Documents/Plant_Store/src/assets/data/products-details.js":"6","/home/dci/Documents/Plant_Store/src/components/redux/actions.js":"7","/home/dci/Documents/Plant_Store/src/components/Footer.jsx":"8","/home/dci/Documents/Plant_Store/src/components/orders/Orders.jsx":"9","/home/dci/Documents/Plant_Store/src/components/products/ListOfProducts.jsx":"10","/home/dci/Documents/Plant_Store/src/components/products/Product.jsx":"11"},{"size":515,"mtime":1609944154632,"results":"12","hashOfConfig":"13"},{"size":242,"mtime":1612522827130,"results":"14","hashOfConfig":"13"},{"size":420,"mtime":1612522663371,"results":"15","hashOfConfig":"13"},{"size":3282,"mtime":1612536144475,"results":"16","hashOfConfig":"13"},{"size":2177,"mtime":1612537364323,"results":"17","hashOfConfig":"13"},{"size":1643,"mtime":1612525906472,"results":"18","hashOfConfig":"13"},{"size":556,"mtime":1612532006033,"results":"19","hashOfConfig":"13"},{"size":617,"mtime":1612514590853,"results":"20","hashOfConfig":"13"},{"size":2069,"mtime":1612535942278,"results":"21","hashOfConfig":"13"},{"size":494,"mtime":1612514723834,"results":"22","hashOfConfig":"13"},{"size":2839,"mtime":1612533478379,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1se2lgb",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"/home/dci/Documents/Plant_Store/src/index.js",[],["50","51"],"/home/dci/Documents/Plant_Store/src/App.js",[],"/home/dci/Documents/Plant_Store/src/components/redux/store.js",["52"],"import { createStore, compose } from \"redux\";\nimport logger from \"redux-logger\";\nimport reducer from \"./reducer\";\n\nconst enhancers = compose(\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nconst store = createStore(reducer, enhancers);\n\n// const unsubscribe = store.subscribe(() => {\n//   console.log(\"update state\", store.getState());\n// });\n\n// unsubscribe();\n\nexport default store;\n","/home/dci/Documents/Plant_Store/src/components/redux/reducer.js",[],"/home/dci/Documents/Plant_Store/src/components/NavbarDisplay.jsx",[],"/home/dci/Documents/Plant_Store/src/assets/data/products-details.js",[],"/home/dci/Documents/Plant_Store/src/components/redux/actions.js",[],"/home/dci/Documents/Plant_Store/src/components/Footer.jsx",[],"/home/dci/Documents/Plant_Store/src/components/orders/Orders.jsx",["53","54"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from \"reactstrap\";\nimport x from \"../../assets/images/noStock.png\";\nimport { deleteItem, sumOrders } from \"../redux/actions\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Orders() {\n  const orders = useSelector((state) => state.basket.order);\n  const total = useSelector((state) => state.basket.total);\n  const [isBasketEmpty, setIsBasketEmpty] = useState(true);\n\n  const dispatch = useDispatch();\n\n  return isBasketEmpty ? (\n    <div className='container col-6'>\n      <Table className='justify-content-center mt-5 '>\n        <thead style={{ color: \"rgb(214,131,141)\" }}>\n          <tr>\n            <th># id</th>\n            <th>Product</th>\n            <th>Qty</th>\n            <th>Price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {orders.map((item, index) => {\n            return (\n              <tr key={index}>\n                <td>{item.id}</td>\n                <td>{item.title}</td>\n                <td>{item.quantity}</td>\n                <td>{item.price * item.quantity}€</td>\n                <td>\n                  <img\n                    src={x}\n                    alt='delete button'\n                    id='delete'\n                    onClick={(e) => {\n                      e.preventDefault();\n                      dispatch(deleteItem(index));\n                      if (orders.length > 1) {\n                        dispatch(sumOrders());\n                      }\n                    }}\n                  ></img>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td colSpan='3'></td>\n            <td className='sum'>{total}€</td>\n          </tr>\n        </tfoot>\n      </Table>\n    </div>\n  ) : (\n    <div>\n      <h2 className='container cardEmpty'>Your Cart is empty</h2>\n      <Link className='goShop' to='/shop'>\n        See our product\n      </Link>\n    </div>\n  );\n}\n","/home/dci/Documents/Plant_Store/src/components/products/ListOfProducts.jsx",[],"/home/dci/Documents/Plant_Store/src/components/products/Product.jsx",["55","56"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  Button,\n  Input,\n} from \"reactstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { remove, add, sumOrders } from \"../redux/actions\";\nimport soldOutImg from \"../../assets/images/soldout.png\";\nexport default function Product(props) {\n  const orders = useSelector((state) => state.basket.order);\n  const [qty, setQty] = useState(0);\n  const [limit, setLimit] = useState(props.product.stock);\n  const [soldOut, setSoldOut] = useState(false);\n  // const [indexOfItem, setIndexOfItem] = useState(0);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    orders.map((item, index) => {\n      if (item.id === props.product.id) {\n        setQty(orders[index].quantity);\n      }\n      return qty;\n    });\n  }, []);\n\n  return (\n    <div key={props.product.id}>\n      <Card body width='100%' height='200px'>\n        <CardImg\n          style={{ objectFit: \"contain\" }}\n          top\n          width='100%'\n          src={props.product.image}\n          alt='Card image cap'\n        />\n        <CardBody className='text-center'>\n          <CardTitle style={{ color: \"var(--pink)\" }} tag='h4'>\n            {props.product.name}\n          </CardTitle>\n\n          <CardText className='m-2' tag='h5'>\n            Price: {props.product.price}€\n          </CardText>\n          <div className='d-flex inline-flex justify-content-center'>\n            <Button\n              className='col-2 button'\n              onClick={() => {\n                dispatch(remove(props.product.id));\n                dispatch(sumOrders());\n                setQty((prevQty) => prevQty - 1);\n                if (qty < limit) {\n                  setSoldOut(false);\n                }\n              }}\n              disabled={qty < 1 ? true : false}\n            >\n              -\n            </Button>\n            <Input\n              className='col-2 mx-2 input'\n              disabled\n              type='number'\n              value={qty}\n            />\n            {soldOut ? (\n              <img src={soldOutImg} alt='sold-out' id='sold-out'></img>\n            ) : (\n              <Button\n                className='col-2 button'\n                onClick={() => {\n                  dispatch(\n                    add(\n                      props.product.id,\n                      props.product.name,\n                      props.product.price\n                    )\n                  );\n                  dispatch(sumOrders());\n                  setQty((prevQty) => prevQty + 1);\n                  if (qty === limit - 1) {\n                    setSoldOut(true);\n                  }\n                }}\n              >\n                +\n              </Button>\n            )}\n          </div>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":14},{"ruleId":"61","severity":1,"message":"65","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"66","line":12,"column":25,"nodeType":"63","messageId":"64","endLine":12,"endColumn":41},{"ruleId":"61","severity":1,"message":"67","line":17,"column":17,"nodeType":"63","messageId":"64","endLine":17,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":30,"column":6,"nodeType":"70","endLine":30,"endColumn":8,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'logger' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setIsBasketEmpty' is assigned a value but never used.","'setLimit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'orders', 'props.product.id', and 'qty'. Either include them or remove the dependency array.","ArrayExpression",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [orders, props.product.id, qty]",{"range":"77","text":"78"},[844,846],"[orders, props.product.id, qty]"]