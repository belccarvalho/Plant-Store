[{"/home/dci/Documents/Plant_Store/src/index.js":"1","/home/dci/Documents/Plant_Store/src/App.js":"2","/home/dci/Documents/Plant_Store/src/components/redux/store.js":"3","/home/dci/Documents/Plant_Store/src/components/redux/reducer.js":"4","/home/dci/Documents/Plant_Store/src/components/NavbarDisplay.jsx":"5","/home/dci/Documents/Plant_Store/src/assets/data/products-details.js":"6","/home/dci/Documents/Plant_Store/src/components/redux/actions.js":"7","/home/dci/Documents/Plant_Store/src/components/Footer.jsx":"8","/home/dci/Documents/Plant_Store/src/components/orders/Orders.jsx":"9","/home/dci/Documents/Plant_Store/src/components/products/ListOfProducts.jsx":"10","/home/dci/Documents/Plant_Store/src/components/products/Product.jsx":"11","/home/dci/Documents/Plant_Store/src/components/Banner.jsx":"12","/home/dci/Documents/Plant_Store/src/components/Buy.jsx":"13","/home/dci/Documents/Plant_Store/src/components/Main.jsx":"14"},{"size":515,"mtime":1609944154632,"results":"15","hashOfConfig":"16"},{"size":243,"mtime":1612622686729,"results":"17","hashOfConfig":"16"},{"size":420,"mtime":1612522663371,"results":"18","hashOfConfig":"16"},{"size":3349,"mtime":1612619435777,"results":"19","hashOfConfig":"16"},{"size":2124,"mtime":1612622688453,"results":"20","hashOfConfig":"16"},{"size":2520,"mtime":1612620307600,"results":"21","hashOfConfig":"16"},{"size":556,"mtime":1612532006033,"results":"22","hashOfConfig":"16"},{"size":617,"mtime":1612514590853,"results":"23","hashOfConfig":"16"},{"size":2123,"mtime":1612618301143,"results":"24","hashOfConfig":"16"},{"size":494,"mtime":1612514723834,"results":"25","hashOfConfig":"16"},{"size":2919,"mtime":1612623252979,"results":"26","hashOfConfig":"16"},{"size":290,"mtime":1612608812975,"results":"27","hashOfConfig":"16"},{"size":146,"mtime":1612616275863,"results":"28","hashOfConfig":"16"},{"size":476,"mtime":1612623073882,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"cwx9xi",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dci/Documents/Plant_Store/src/index.js",[],["61","62"],"/home/dci/Documents/Plant_Store/src/App.js",[],"/home/dci/Documents/Plant_Store/src/components/redux/store.js",["63"],"import { createStore, compose } from \"redux\";\nimport logger from \"redux-logger\";\nimport reducer from \"./reducer\";\n\nconst enhancers = compose(\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nconst store = createStore(reducer, enhancers);\n\n// const unsubscribe = store.subscribe(() => {\n//   console.log(\"update state\", store.getState());\n// });\n\n// unsubscribe();\n\nexport default store;\n","/home/dci/Documents/Plant_Store/src/components/redux/reducer.js",["64"],"import products from \"../../assets/data/products-details\";\nimport { sumOrders } from \"./actions\";\nimport { useDispatch } from \"react-redux\";\nconst initialState = {\n  basket: { qtyItem: 0, order: [], total: 0 },\n  products: products,\n};\nconst reducer = (state = initialState, action) => {\n  // const stockOfProduct = action.payload.stock;\n  switch (action.type) {\n    case \"ADD_PRODUCT\":\n      //create object with some data from product in order to add to the basket order\n      let newItem = {\n        id: action.payload.id,\n        title: action.payload.name,\n        price: action.payload.price,\n        quantity: 1,\n      };\n      //change just the quantity of the product in the basket order, if the product is already there\n      let itemExist = false;\n      let itemIncreased = state.basket.order.map((item) => {\n        if (item.id === action.payload.id) {\n          itemExist = true;\n          item.quantity++;\n        }\n        return item;\n      });\n      //decrease product from stock\n      let productsStockUpdated = state.products.map((product) => {\n        if (product.id === action.payload.id) {\n          product.stock--;\n        }\n        return product;\n      });\n      //add the newItem to the order\n      if (!itemExist) {\n        return {\n          ...state,\n          basket: {\n            qtyItem: state.basket.order.length + 1,\n            order: [...state.basket.order, newItem],\n          },\n        };\n      }\n      return {\n        ...state,\n        basket: {\n          qtyItem: state.basket.order.length,\n          order: [...itemIncreased],\n        },\n        products: [...productsStockUpdated],\n      };\n\n    case \"REM_PRODUCT\":\n      //change just the quantity of the product in the basket order, if the product is already there, or delete it if the quantity is zero\n      state.basket.order.map((item, index) => {\n        // let indexOfItem = -1;\n        if (item.id === action.payload.id) {\n          item.quantity--;\n\n          if (item.quantity === 0) {\n            let indexOfItem = index;\n            if (indexOfItem !== -1) {\n              state.basket.order.splice(indexOfItem, 1);\n              state.basket.qtyItem = state.basket.order.length;\n            }\n          }\n        }\n        sumOrders();\n        return item;\n      });\n\n      //increase product from stock\n      state.products.map((product) => {\n        if (product.id === action.payload.id) {\n          product.stock = product.stock + 1;\n        }\n        return product;\n      });\n      return state;\n\n    case \"SUM_ORDERS\":\n      let partialSum;\n      let sum = [];\n      state.basket.total = 0;\n      const reducer = (accumulator, currentValue) => accumulator + currentValue;\n      state.basket.order.map((item) => {\n        partialSum = item.price * item.quantity;\n        sum = [...sum, partialSum];\n        return sum;\n      });\n      if (state.basket.order.length > 0) {\n        state.basket.total = sum.reduce(reducer);\n      }\n      return state;\n\n    case \"DEL_ITEM\":\n      console.log(action.payload);\n      state.basket.order.splice(action.payload, 1);\n      sumOrders();\n      return {\n        ...state,\n        basket: {\n          order: state.basket.order,\n          qtyItem: state.basket.order.length,\n          total: state.basket.total,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","/home/dci/Documents/Plant_Store/src/components/NavbarDisplay.jsx",[],"/home/dci/Documents/Plant_Store/src/assets/data/products-details.js",[],"/home/dci/Documents/Plant_Store/src/components/redux/actions.js",[],"/home/dci/Documents/Plant_Store/src/components/Footer.jsx",[],"/home/dci/Documents/Plant_Store/src/components/orders/Orders.jsx",[],"/home/dci/Documents/Plant_Store/src/components/products/ListOfProducts.jsx",[],"/home/dci/Documents/Plant_Store/src/components/products/Product.jsx",["65","66"],"/home/dci/Documents/Plant_Store/src/components/Banner.jsx",[],"/home/dci/Documents/Plant_Store/src/components/Buy.jsx",[],"/home/dci/Documents/Plant_Store/src/components/Main.jsx",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"75","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":21},{"ruleId":"71","severity":1,"message":"76","line":17,"column":17,"nodeType":"73","messageId":"74","endLine":17,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":30,"column":6,"nodeType":"79","endLine":30,"endColumn":8,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'logger' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'setLimit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'orders', 'props.product.id', and 'qty'. Either include them or remove the dependency array.","ArrayExpression",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [orders, props.product.id, qty]",{"range":"86","text":"87"},[844,846],"[orders, props.product.id, qty]"]