[{"/home/dci/Documents/Plant_Store/src/index.js":"1","/home/dci/Documents/Plant_Store/src/App.js":"2","/home/dci/Documents/Plant_Store/src/components/redux/store.js":"3","/home/dci/Documents/Plant_Store/src/components/redux/reducer.js":"4","/home/dci/Documents/Plant_Store/src/components/NavbarDisplay.jsx":"5","/home/dci/Documents/Plant_Store/src/assets/data/products-details.js":"6","/home/dci/Documents/Plant_Store/src/components/redux/actions.js":"7","/home/dci/Documents/Plant_Store/src/components/Footer.jsx":"8","/home/dci/Documents/Plant_Store/src/components/orders/Orders.jsx":"9","/home/dci/Documents/Plant_Store/src/components/products/ListOfProducts.jsx":"10","/home/dci/Documents/Plant_Store/src/components/products/Product.jsx":"11"},{"size":515,"mtime":1609944154632,"results":"12","hashOfConfig":"13"},{"size":242,"mtime":1612522827130,"results":"14","hashOfConfig":"13"},{"size":420,"mtime":1612522663371,"results":"15","hashOfConfig":"13"},{"size":3372,"mtime":1612544964600,"results":"16","hashOfConfig":"13"},{"size":1862,"mtime":1612546604660,"results":"17","hashOfConfig":"13"},{"size":1643,"mtime":1612525906472,"results":"18","hashOfConfig":"13"},{"size":556,"mtime":1612532006033,"results":"19","hashOfConfig":"13"},{"size":617,"mtime":1612514590853,"results":"20","hashOfConfig":"13"},{"size":2149,"mtime":1612607757989,"results":"21","hashOfConfig":"13"},{"size":494,"mtime":1612514723834,"results":"22","hashOfConfig":"13"},{"size":2839,"mtime":1612533478379,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"cwx9xi",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"/home/dci/Documents/Plant_Store/src/index.js",[],["50","51"],"/home/dci/Documents/Plant_Store/src/App.js",[],"/home/dci/Documents/Plant_Store/src/components/redux/store.js",["52"],"import { createStore, compose } from \"redux\";\nimport logger from \"redux-logger\";\nimport reducer from \"./reducer\";\n\nconst enhancers = compose(\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nconst store = createStore(reducer, enhancers);\n\n// const unsubscribe = store.subscribe(() => {\n//   console.log(\"update state\", store.getState());\n// });\n\n// unsubscribe();\n\nexport default store;\n","/home/dci/Documents/Plant_Store/src/components/redux/reducer.js",[],"/home/dci/Documents/Plant_Store/src/components/NavbarDisplay.jsx",["53"],"import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavbarText,\n} from \"reactstrap\";\nimport { TiShoppingCart } from \"react-icons/ti\";\nimport { RiPlantFill } from \"react-icons/ri\";\nimport ListOfProducts from \"./products/ListOfProducts.jsx\";\nimport Orders from \"./orders/Orders.jsx\";\nimport { useSelector } from \"react-redux\";\n\nexport default function NavbarDisplay() {\n  const basketCounter = useSelector((state) => state.basket.qtyItem);\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <Router>\n      <Navbar className='navbar' light expand='md'>\n        <NavbarBrand className='col-3' href='/shop'>\n          <RiPlantFill\n            style={{ color: \"var(--pink)\", width: \"4rem\", height: \"4rem\" }}\n          />\n          {\"  \"}\n          <p>Online-Shop</p>\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=' col-10' navbar>\n            <NavItem tag='h4'>\n              <Link className='nav-link' to='/shop'>\n                Shop\n              </Link>\n            </NavItem>\n            <NavItem tag='h4'>\n              <Link className='nav-link' to='/orders'>\n                Orders\n              </Link>\n            </NavItem>\n          </Nav>\n          <Link className='col-2 nav-link basket' to='/orders'>\n            <span>\n              <TiShoppingCart />\n            </span>\n            <p>{basketCounter}</p>\n          </Link>\n        </Collapse>\n      </Navbar>\n      <Switch>\n        <Route path='/shop'>\n          <ListOfProducts />\n        </Route>\n        <Route path='/orders'>\n          <Orders />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","/home/dci/Documents/Plant_Store/src/assets/data/products-details.js",[],"/home/dci/Documents/Plant_Store/src/components/redux/actions.js",[],"/home/dci/Documents/Plant_Store/src/components/Footer.jsx",[],"/home/dci/Documents/Plant_Store/src/components/orders/Orders.jsx",["54","55","56"],"/home/dci/Documents/Plant_Store/src/components/products/ListOfProducts.jsx",[],"/home/dci/Documents/Plant_Store/src/components/products/Product.jsx",["57","58"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  Button,\n  Input,\n} from \"reactstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { remove, add, sumOrders } from \"../redux/actions\";\nimport soldOutImg from \"../../assets/images/soldout.png\";\nexport default function Product(props) {\n  const orders = useSelector((state) => state.basket.order);\n  const [qty, setQty] = useState(0);\n  const [limit, setLimit] = useState(props.product.stock);\n  const [soldOut, setSoldOut] = useState(false);\n  // const [indexOfItem, setIndexOfItem] = useState(0);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    orders.map((item, index) => {\n      if (item.id === props.product.id) {\n        setQty(orders[index].quantity);\n      }\n      return qty;\n    });\n  }, []);\n\n  return (\n    <div key={props.product.id}>\n      <Card body width='100%' height='200px'>\n        <CardImg\n          style={{ objectFit: \"contain\" }}\n          top\n          width='100%'\n          src={props.product.image}\n          alt='Card image cap'\n        />\n        <CardBody className='text-center'>\n          <CardTitle style={{ color: \"var(--pink)\" }} tag='h4'>\n            {props.product.name}\n          </CardTitle>\n\n          <CardText className='m-2' tag='h5'>\n            Price: {props.product.price}â‚¬\n          </CardText>\n          <div className='d-flex inline-flex justify-content-center'>\n            <Button\n              className='col-2 button'\n              onClick={() => {\n                dispatch(remove(props.product.id));\n                dispatch(sumOrders());\n                setQty((prevQty) => prevQty - 1);\n                if (qty < limit) {\n                  setSoldOut(false);\n                }\n              }}\n              disabled={qty < 1 ? true : false}\n            >\n              -\n            </Button>\n            <Input\n              className='col-2 mx-2 input'\n              disabled\n              type='number'\n              value={qty}\n            />\n            {soldOut ? (\n              <img src={soldOutImg} alt='sold-out' id='sold-out'></img>\n            ) : (\n              <Button\n                className='col-2 button'\n                onClick={() => {\n                  dispatch(\n                    add(\n                      props.product.id,\n                      props.product.name,\n                      props.product.price\n                    )\n                  );\n                  dispatch(sumOrders());\n                  setQty((prevQty) => prevQty + 1);\n                  if (qty === limit - 1) {\n                    setSoldOut(true);\n                  }\n                }}\n              >\n                +\n              </Button>\n            )}\n          </div>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":14},{"ruleId":"63","severity":1,"message":"67","line":10,"column":3,"nodeType":"65","messageId":"66","endLine":10,"endColumn":13},{"ruleId":"63","severity":1,"message":"68","line":6,"column":22,"nodeType":"65","messageId":"66","endLine":6,"endColumn":31},{"ruleId":"63","severity":1,"message":"69","line":8,"column":8,"nodeType":"65","messageId":"66","endLine":8,"endColumn":14},{"ruleId":"70","severity":1,"message":"71","line":22,"column":6,"nodeType":"72","endLine":22,"endColumn":13,"suggestions":"73"},{"ruleId":"63","severity":1,"message":"74","line":17,"column":17,"nodeType":"65","messageId":"66","endLine":17,"endColumn":25},{"ruleId":"70","severity":1,"message":"75","line":30,"column":6,"nodeType":"72","endLine":30,"endColumn":8,"suggestions":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'logger' is defined but never used.","Identifier","unusedVar","'NavbarText' is defined but never used.","'sumOrders' is defined but never used.","'cactus' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.","ArrayExpression",["79"],"'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'orders', 'props.product.id', and 'qty'. Either include them or remove the dependency array.",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [orders, total]",{"range":"85","text":"86"},"Update the dependencies array to be: [orders, props.product.id, qty]",{"range":"87","text":"88"},[759,766],"[orders, total]",[844,846],"[orders, props.product.id, qty]"]